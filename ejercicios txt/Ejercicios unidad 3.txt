//Ejercicio 1: 
//Realizar un programa que permita leer de teclado y luego imprimir
//los contenidos de una variable tipo struct cuyos campos son: nombre (cadena
//de caracteres [10]), legajo (entero), dependencia de trabajo (entero), horas
//trabajadas (real).

#include <stdio.h>
#include <string.h>


struct  
    { 
      char nombre[10];
      int legajo;
      int dependenciaDeTrabajo;
      float horasTrabajadas;
      
    }empleado;
    
void Imprimir (char nombre[],int legajo,int dependenciaDeTrabajo,double horasTrabajadas)

{
    printf("El Nombre es %s\tLegajo %d\tDependencia %d\tHs Trabajadas %.2f"
    ,nombre,legajo,dependenciaDeTrabajo,horasTrabajadas);
}

void SolicitaDatos()
{
    char nombre[10];
    int legajo;
    int dependenciaDeTrabajo;
    float horasTrabajadas;
    
    printf("Ingresar Nombre\n");
    scanf("%9s",nombre);
    printf("Ingresar Legajo \n");
    scanf("%d",&legajo);
    printf("Ingresar Dependencia \n");
    scanf("%d",&dependenciaDeTrabajo);
    printf("Ingresar Horas Trabajadas \n");
    scanf("%f",&horasTrabajadas);
    
    strcpy(empleado.nombre,nombre);
    empleado.legajo = legajo;
    empleado.dependenciaDeTrabajo = dependenciaDeTrabajo;
    empleado.horasTrabajadas = horasTrabajadas;
    
}

int  main()
{   
    SolicitaDatos();
    Imprimir(empleado.nombre,empleado.legajo,empleado.dependenciaDeTrabajo,empleado.horasTrabajadas);
    
    return 0;
}


----------------------------------------------------------------------------------------------------------

//Ejercicio 2: 
//Realizar un programa que permita, dado un vector de
//estructuras/registros cuyos campos son: empresa (cadena de caracteres [30]),
//domicilio (cadena de caracteres [40]), código postal (cadena de caracteres
//[10]), localidad (cadena de caracteres [20]), país (cadena de caracteres [15]),
//imprimir un listado para generar el destinatario de unas cartas. El formato debe
//ser el correcto

#include <stdio.h>
#include <string.h>


struct  
    { 
      char nombreEmpresa[30];
      char domicilioEmpresa[40];
      char codigoPostalEmpresa[10];
      char localidadEmpresa[20];
      char paisEmpresa[15];
      
    }empresas[5];

   //prototipo
   void Imprimir();
   void CargoVector(); 


   void Imprimir ()

    {
        int i =0;
        for (i=0;i<5;i++)
        {
          printf("Empresa[%d]:%s\nDomicilio:%s\tCod:%s\tLocalidad:%s\tPais:%s\n"
          ,i,empresas[i].nombreEmpresa,empresas[i].domicilioEmpresa,
          empresas[i].codigoPostalEmpresa,empresas[i].localidadEmpresa,
          empresas[i].paisEmpresa);
        }
        
    }



  void CargoVector()

  {
      
      int i ;
      for (i=0;i<5;i++)
      {
      strcpy(empresas[i].nombreEmpresa ,"El Barto") ;
      //fflush(stdin);
      strcpy(empresas[i].domicilioEmpresa,"calle falsa 123");
      //fflush(stdin);
      strcpy(empresas[i].codigoPostalEmpresa,"	80085");
      //fflush(stdin);
      strcpy(empresas[i].localidadEmpresa,"Springfield");
      // fflush(stdin);
      strcpy(empresas[i].paisEmpresa,"Usa");
      //fflush(stdin);
      }
      
    strcpy(empresas[2].nombreEmpresa ,"Larguirucho") ;
      //fflush(stdin);
      strcpy(empresas[3].domicilioEmpresa,"742 Evergreen Terrace");
      //fflush(stdin);
      strcpy(empresas[1].codigoPostalEmpresa,"1528mnx");
      //fflush(stdin);
      strcpy(empresas[4].localidadEmpresa,"moron");
      fflush(stdin);
      strcpy(empresas[0].paisEmpresa,"ho chi min");

  }


int  main()
{   
    CargoVector();
    Imprimir();
    
    
    return 0;
}

------------------------------------------------------------------------------------
//Ejercicio 3: Realizar un programa que permita, dado un vector A de
//estructuras/registros, cuyos campos son: producto (cadena de caracteres [10]),
//código (entero) y precio (real); obtener un nuevo vector B de
//estructuras/registros que contengan sólo el código y el precio del vector A.

#include <stdio.h>
#include <string.h>


struct  
    { 
      char descripcionProducto[10];
      int codigoProducto;
      float precioProducto;  
           
    }VectorA[25],VectorB[25];

   //prototipo   
   void CargoVectorA(); 
   void PasoDatosdeVectorAaVectorB();
   void ImprimirVectorB();

   //Desarrollo de funciones
   void CargoVectorA()

      {
        int i ;
          for (i=0;i<25;i++)
          {
            strcpy(VectorA[i].descripcionProducto ,"JaleaVenus") ;
            VectorA[i].codigoProducto= 25*(2+i);
            VectorA[i].precioProducto=15.02*(2+i);
          }
      
      }
  void PasoDatosdeVectorAaVectorB()
  {
  int i =0;
        for (i=0;i<25;i++)
        {
         VectorB[i].codigoProducto=VectorA[i].codigoProducto;
         VectorB[i].precioProducto=VectorA[i].precioProducto;         
        }
  }

   void ImprimirVectorB()

    {
        int i =0;
        
     printf("***vector b***\n");

        for (i=0;i<25;i++)
        {
         //imprimo precio y codigo 
         //TODO alinear impresion
         
          printf("Producto[%d]:Codigo: %d Precio $: %.2f\n"
          ,i,VectorB[i].codigoProducto,VectorB[i].precioProducto);
        }
     
     printf("***vector b***\n");  
    }

int  main()
{   
    CargoVectorA();
    PasoDatosdeVectorAaVectorB();
    ImprimirVectorB();
    
    
    return 0;
}
------------------------------------------------------------------------------
//Ejercicio 4: Dado un vector B de estructuras/registros de alumnos cuyos
//campos son: nombre (cadena de caracteres [10]) y nota (entero); realizar
//mediante un programa la impresión de los nombres de los alumnos cuyas
//notas superan el valor 7.
//Nota: Los vectores y registros deben ser cargados desde teclado e impresos en
//pantalla.

#include <stdio.h>
#include <string.h>


struct
    { 
      char nomobreAlumno[10];
      int notaAlumno;               
    }
    VectorB[5],VectorNota[];
        
   //prototipo   
   void PidoDatos();  
   void ImprimirNotaMayorA7();

   //Desarrollo de funciones
   void PidoDatos()

      {
        char nombre[10];
        int nota;
        int i ;
         //pido datos
          for (i=0;i<5;i++)
          {
            printf("Ingresar Nombre Alumno \n");
            scanf("%9s",nombre);

            printf("Ingresar Nota Alumno \n");
            scanf("%d",&nota);

            strcpy(VectorB[i].nomobreAlumno,nombre);
            VectorB[i].notaAlumno=nota; 
          }    
          
      } 
      
  void ImprimirNotaMayorA7()
  {
    int i =0;
    
       for (i=0;i<5;i++)
        {      
           if (VectorB[i].notaAlumno>7)
          {
            strcpy(VectorNota[i].nomobreAlumno,VectorB[i].nomobreAlumno);
            VectorNota[i].notaAlumno= VectorB[i].notaAlumno; 
           printf("Alumno:[%d]\tNombre:%s\tNota:%d\n"
            ,i,VectorNota[i].nomobreAlumno,VectorNota[i].notaAlumno);      
          }                  
        }  

         
  }

int  main()
{   
    PidoDatos();
    
    ImprimirNotaMayorA7();
    

    return 0;
}
    //TODO ver si puedo separar la carga del vector de la funcion pedir datos
      //void CargoVectorB(char *nombre,int nota)
     // {
     //  int i;
     //  char *punteroANombre;
      // int Nota;
     //  punteroANombre=nombre;
     //   for (i=0;i<25;i++)
      //    {
      //      strcpy(VectorB[i].nomobreAlumno,punteroANombre);
      //      VectorB[i].notaAlumno=Nota;                        
      //    }
     // }    






















